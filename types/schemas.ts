/*
 * ==========================================
 * |          GENERATED BY SUPAZOD          |
 * ==========================================
 */

import { z } from 'zod'

import type { Json } from './database.types'

export const jsonSchema: z.ZodSchema<Json> = z.lazy(() =>
    z
        .union([
            z.string(),
            z.number(),
            z.boolean(),
            z.record(z.union([ jsonSchema, z.undefined() ])),
            z.array(jsonSchema),
        ])
        .nullable(),
)

export const publicExperienceRowSchemaSchema = z.object({
    created_at: z.string(),
    description: z.string(),
    end: z.string().nullable(),
    id: z.number(),
    link: z.string().nullable(),
    start: z.string(),
    tags: jsonSchema.nullable(),
    title: z.string(),
})

export const publicExperienceInsertSchemaSchema = z.object({
    created_at: z.string().optional(),
    description: z.string(),
    end: z.string().optional().nullable(),
    id: z.number().optional(),
    link: z.string().optional().nullable(),
    start: z.string(),
    tags: jsonSchema.optional().nullable(),
    title: z.string(),
})

export const publicExperienceUpdateSchemaSchema = z.object({
    created_at: z.string().optional(),
    description: z.string().optional(),
    end: z.string().optional().nullable(),
    id: z.number().optional(),
    link: z.string().optional().nullable(),
    start: z.string().optional(),
    tags: jsonSchema.optional().nullable(),
    title: z.string().optional(),
})

export const publicExperienceRelationshipsSchemaSchema = z.tuple([])

export const publicProjectsRowSchemaSchema = z.object({
    created_at: z.string(),
    description: z.string(),
    id: z.number(),
    image: z.string(),
    tags: jsonSchema.nullable(),
    title: z.string(),
    url: z.string().nullable(),
})

export const publicProjectsInsertSchemaSchema = z.object({
    created_at: z.string().optional(),
    description: z.string(),
    id: z.number().optional(),
    image: z.string(),
    tags: jsonSchema.optional().nullable(),
    title: z.string(),
    url: z.string().optional().nullable(),
})

export const publicProjectsUpdateSchemaSchema = z.object({
    created_at: z.string().optional(),
    description: z.string().optional(),
    id: z.number().optional(),
    image: z.string().optional(),
    tags: jsonSchema.optional().nullable(),
    title: z.string().optional(),
    url: z.string().optional().nullable(),
})

export const publicProjectsRelationshipsSchemaSchema = z.tuple([])
